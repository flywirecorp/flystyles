//
//  Utilities
//

// Removes the unit (e.g. px, em, rem) from a value, returning the number only.
// @param {Number} $num - Number to strip unit from.
// @returns {Number} The same number, sans unit.
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts pixels to rem
// @param {String} $pixels
// @returns {String} returns the unit in rem's
@function rem($pixels) {
  @return #{$pixels / $font-size-root}rem;
}

// Clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@function capitalize($string) {
  @return to-upper-case(str-slice($string, 1, 1)) + str-slice($string, 2);
}

//
//  Function to replace characters in a string
//
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index { @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }
  @return $string;
}

//
//  Function to create an optimized svg url
//  (may need a few extra replacements)
//
@function svg-url($svg){
  $svg: str-replace($svg,'"','\'');
  $svg: str-replace($svg,'<','%3C');
  $svg: str-replace($svg,'>','%3E');
  $svg: str-replace($svg,'&','%26');
  $svg: str-replace($svg,'#','%23');
  @return url("data:image/svg+xml;charset=utf8,#{$svg}");
}
